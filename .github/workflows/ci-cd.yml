name: Build, Push and Deploy

on:
  push:
    branches:
      - main
    paths-ignore:
      - '.github/workflows/**'

jobs:

  terraform:
    runs-on: ubuntu-latest
    env:
      ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
      ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}

    outputs:
      acr_login_server: ${{ steps.tf_outputs.outputs.acr_login_server }}
      acr_username: ${{ steps.tf_outputs.outputs.acr_username }}
      acr_password: ${{ steps.tf_outputs.outputs.acr_password }}
      webapp_url: ${{ steps.tf_outputs.outputs.webapp_url }}
      webapp_name: ${{ steps.tf_outputs.outputs.webapp_name }}
      rg_name: ${{ steps.tf_outputs.outputs.rg_name }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Terraform Setup
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init & Apply
        id: apply
        run: | 
          cd terraform
          terraform init
          terraform apply -var="image_tag=${{ github.sha }}" -auto-approve

      - name: Terraform Outputs
        id: tf_outputs
        run: |
          cd terraform
          echo "acr_login_server=$(terraform output -raw acr_login_server)" >> $GITHUB_OUTPUT
          echo "acr_username=$(terraform output -raw acr_username)" >> $GITHUB_OUTPUT
          echo "acr_password=$(terraform output -raw acr_password)" >> $GITHUB_OUTPUT
          echo "webapp_url=$(terraform output -raw webapp_url)" >> $GITHUB_OUTPUT
          echo "webapp_name=$(terraform output -raw webapp_name)" >> $GITHUB_OUTPUT
          echo "rg_name=$(terraform output -raw rg_name)" >> $GITHUB_OUTPUT 

  build-and-push:
    runs-on: ubuntu-latest
    needs: terraform

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to Azure Container Registry
        uses: azure/docker-login@v2
        with:
          login-server: ${{ needs.terraform.outputs.acr_login_server }}
          username: ${{ needs.terraform.outputs.acr_username }}
          password: ${{ needs.terraform.outputs.acr_password }}

      - name: Build and push Docker image
        run: |
          docker build -t ${{ needs.terraform.outputs.acr_login_server }}/hono-app:${{ github.sha }} .
          docker push ${{ needs.terraform.outputs.acr_login_server }}/hono-app:${{ github.sha }}

  deploy:
    runs-on: ubuntu-latest
    needs: [terraform, build-and-push]

    steps:
      - name: Login to Azure
        uses: azure/login@v2
        with:
          subscription-id: ${{ secrets.ARM_SUBSCRIPTION_ID }}
          tenant-id: ${{ secrets.ARM_TENANT_ID }}
          client-id: ${{ secrets.ARM_CLIENT_ID }}
          client-secret: ${{ secrets.ARM_CLIENT_SECRET }}

      - name: Update Web App Container
        run: |
          az webapp config container set \
            --name ${{ needs.terraform.outputs.webapp_name }} \
            --resource-group ${{ needs.terraform.outputs.rg_name }} \
            --docker-custom-image-name ${{ needs.terraform.outputs.acr_login_server }}/hono-app:${{ github.sha }} \
            --docker-registry-server-url https://${{ needs.terraform.outputs.acr_login_server }} \
            --docker-registry-server-user ${{ needs.terraform.outputs.acr_username }} \
            --docker-registry-server-password ${{ needs.terraform.outputs.acr_password }}

      - name: Restart Web App
        run: |
          az webapp restart \
            --name ${{ needs.terraform.outputs.webapp_name }} \
            --resource-group ${{ needs.terraform.outputs.rg_name }} 

  deployment-success:
    runs-on: ubuntu-latest
    needs: [terraform, build-and-push, deploy]

    steps:
      - name: Deployment Success
        run: |
          echo ${{ needs.terraform.outputs.webapp_url }}